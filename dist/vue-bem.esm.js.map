{"version":3,"file":"vue-bem.esm.js","sources":["src/modules/shared.js","src/modules/utils.js","src/modules/plugin.js","src/modules/bem.js","src/modules/mixin.js"],"sourcesContent":["export const TYPE_STRING = 'string';\nexport const DEFAULT_OPTIONS = {\n  namespace: '',\n  blockSource: 'name',\n  method: '$bem',\n  hyphenate: {\n    blockAndElement: false,\n    modifier: true,\n  },\n  delimiters: {\n    element: '__',\n    modifier: '--',\n    value: '-',\n  }\n};\n\nexport const HYPHENATE_CACHE = {};\n","import { HYPHENATE_CACHE, TYPE_STRING } from './shared';\n\n/**\n * Convert the given string to kebab-case.\n *\n * @param {String} str - The to be converted string.\n *\n * @returns {String}\n */\nexport function hyphenateString(str) {\n  return HYPHENATE_CACHE[str] // eslint-disable-line no-return-assign\n    || (HYPHENATE_CACHE[str] = str.replace(/\\B([A-Z])/g, '-$1').toLowerCase());\n}\n\n/**\n * Create an Array of modifier classes from the given modifiers Object.\n *\n * @param {String} className - The className stump.\n * @param {Object} modifiers - An Object of `key: value` BEM modifiers.\n * @param {Object} delimiters - The to be used delimiters.\n * @param {Boolean} [hyphenate=false] - Defines if hyphenated should be used on the modifiers.\n *\n * @returns {Array.<String>}\n */\nexport function getModifiers(className, modifiers, delimiters, hyphenate) { // eslint-disable-line max-params\n  const classNameWithDelimiter = className + delimiters.modifier;\n\n  return Object.entries(modifiers || {}).map((entry) => {\n    const modifier = entry[0];\n    const value = entry[1];\n    let modifierStump = null;\n\n    if (value) {\n      switch (typeof value) { // eslint-disable-line default-case\n        case 'boolean':\n          modifierStump = modifier;\n          break;\n\n        case TYPE_STRING:\n        // Fall through\n\n        case 'number':\n          modifierStump = modifier + delimiters.value + value;\n      }\n    }\n\n    return modifierStump\n      ? classNameWithDelimiter + (hyphenate ? hyphenateString(modifierStump) : modifierStump)\n      : modifierStump;\n  }).filter(Boolean);\n}\n\n/**\n * Adds a class to the given DOM element.\n *\n * @param {Node} element - The to be modified element.\n * @param {String} className - The to be reoved class name.\n */\nexport function addClass(element, className) {\n  element.classList.add(className);\n}\n\n/**\n * Removes a class from the given DOM element.\n *\n * @param {Node} element - The to be modified element.\n * @param {String} className - The to be added class name.\n */\nexport function removeClass(element, className) {\n  element.classList.remove(className);\n}\n","import { DEFAULT_OPTIONS } from './shared';\nimport {\n  hyphenateString,\n  getModifiers,\n  addClass,\n  removeClass\n} from './utils';\n\nexport default {\n  /**\n   * Plugin install method.\n   *\n   * @param {Object} Vue - The Vue instance\n   * @param {Object} customOptions - The plugin options\n   * @param {Object} customOptions.hyphenate - The plugin options\n   *\n   */\n  install(Vue, customOptions = { delimiters: {} }) {\n    const delimiters = Object.assign({}, DEFAULT_OPTIONS.delimiters, customOptions.delimiters);\n    const options = Object.assign({}, DEFAULT_OPTIONS, customOptions);\n    const { hyphenate } = options;\n    const hyphenateBlockAndElement = hyphenate === true || (hyphenate || {}).blockAndElement || false;\n    const hyphenateModifier = hyphenate === true || (hyphenate || {}).modifier || false;\n\n    options.delimiters = delimiters;\n\n    Vue.prototype.$bemOptions = options;\n\n    /**\n     * Get BEM segments.\n     *\n     * @param {Object} binding - The Vue directive binding.\n     * @param {Object} vnode - The Vue directive vnode.\n     *\n     * @returns {Object}\n     */\n    function getBEM(binding, vnode) {\n      const modifiers = binding.value;\n      let block = options.namespace + vnode.context.$options[options.blockSource];\n      let element = binding.arg;\n\n      if (hyphenateBlockAndElement) {\n        block = hyphenateString(block);\n\n        if (element) {\n          element = hyphenateString(element);\n        }\n      }\n\n      return {\n        block,\n        element,\n        modifiers,\n        className: block + (element ? delimiters.element + element : ''),\n      };\n    }\n\n    /**\n     * Adds BEM classes to the element with the directive.\n     *\n     * e.g.\n     * input `v-bem:element=\"modifiers\"`\n     * output `class=\"componentName componentName__element componentName--modifier\"`\n     */\n    Vue.directive('bem', {\n      /**\n       * Set block, element and modifier classes on element insert.\n       *\n       * @param {Node} el - The element with the directive.\n       * @param {Object} binding - Binding information.\n       * @param {Object} vnode - The virtual DOM node of the element.\n       */\n      inserted(el, binding, vnode) {\n        const {\n          block,\n          element,\n          modifiers,\n          className\n        } = getBEM(binding, vnode);\n\n        addClass(el, element ? className : block);\n\n        if (modifiers) {\n          getModifiers(className, modifiers, options.delimiters, hyphenateModifier).forEach((modifier) => {\n            addClass(el, modifier);\n          });\n        }\n      },\n\n      /**\n       * Add/remove modifier classes on update event.\n       *\n       * @param {Node} el - The element with the directive.\n       * @param {Object} binding - Binding information.\n       * @param {Object} vnode - The virtual DOM node of the element.\n       */\n      update(el, binding, vnode) {\n        const modifiersValue = binding.value;\n        const oldModifiers = binding.oldValue;\n\n        if (modifiersValue !== oldModifiers) {\n          const { modifiers, className } = getBEM(binding, vnode);\n          const modifierClasses = getModifiers(className, modifiers, options.delimiters, hyphenateModifier);\n\n          if (oldModifiers) {\n            const oldModifierClasses = getModifiers(className, oldModifiers, options.delimiters, hyphenateModifier);\n\n            oldModifierClasses.forEach((oldModifierClass) => {\n              const index = modifierClasses.indexOf(oldModifierClass);\n\n              if (index === -1) {\n                removeClass(el, oldModifierClass);\n              } else {\n                modifierClasses.splice(index, 1); // Value will not be removed and needs not to be added therefore.\n              }\n            });\n          }\n\n          modifierClasses.forEach((modifierClass) => {\n            addClass(el, modifierClass);\n          });\n        }\n      }\n    });\n  }\n};\n","import { getModifiers } from './utils';\nimport { TYPE_STRING } from './shared';\n\n/**\n * Returns a String of BEM and mixin classes based on the given parameters.\n *\n * @param {Object} options - The internal instance options.\n * @param {String} options.blockName - The block name for the current component.\n * @param {Object} options.delimiters - The to be used delimiters.\n * @param {Boolean} [options.hyphenate=false] - Defines if hyphenated should be used on the modifiers.\n * @param {Object} args - The arguments used on the method call.\n * @param {String} [args.element] - An optional element name.\n * @param {Object} [args.modifiers] - An Object of to be applied modifiers.\n *\n * @returns {String}\n */\nexport default function({ blockName, delimiters, hyphenate }, ...args) {\n  const modifier = args[1] || args[0];\n  let classNames = [];\n  let className = blockName;\n\n  if (!args.length) {\n    return className;\n  }\n\n  if (typeof args[0] !== TYPE_STRING) { // eslint-disable-line valid-typeof\n    classNames.push(blockName);\n  } else {\n    className = blockName + delimiters.element + args[0];\n\n    classNames.push(className);\n  }\n\n  if (modifier && typeof modifier === 'object' && modifier.constructor === Object) {\n    classNames = classNames.concat(getModifiers(className, modifier, delimiters, hyphenate));\n  }\n\n  return classNames.join(' ');\n}\n","import { hyphenateString } from './utils';\nimport { TYPE_STRING } from './shared';\nimport bem from './bem';\n\nconst mixin = {\n  created() {\n    const {\n      blockSource,\n      namespace,\n      hyphenate,\n      delimiters,\n      method\n    } = this.$bemOptions || {};\n    const block = this.$options[blockSource];\n\n    if (block && typeof block === TYPE_STRING) { // eslint-disable-line valid-typeof\n      const hyphenateBlockAndElement = hyphenate === true || (hyphenate || {}).blockAndElement || false;\n      const hyphenateModifier = hyphenate === true || (hyphenate || {}).modifier || false;\n      const namespacedBlock = (namespace || '') + block;\n      const blockName = hyphenateBlockAndElement ? hyphenateString(namespacedBlock) : namespacedBlock;\n\n      this[method] = (...args) => bem({ blockName, delimiters, hyphenate: hyphenateModifier }, ...args);\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  mixin.beforeCreate = function() {\n    if (!this.$bemOptions) {\n      throw new Error('Looks like the plugin of vue-bem is not used by Vue. Please do so or the mixin will not work!');\n    }\n  };\n}\n\nexport default mixin;\n"],"names":["TYPE_STRING","DEFAULT_OPTIONS","namespace","blockSource","method","hyphenate","blockAndElement","modifier","delimiters","element","value","HYPHENATE_CACHE","hyphenateString","str","replace","toLowerCase","getModifiers","className","modifiers","classNameWithDelimiter","Object","entries","map","entry","modifierStump","filter","Boolean","addClass","classList","add","removeClass","remove","install","Vue","customOptions","assign","options","hyphenateBlockAndElement","hyphenateModifier","prototype","$bemOptions","getBEM","binding","vnode","block","context","$options","arg","directive","inserted","el","forEach","update","modifiersValue","oldModifiers","oldValue","modifierClasses","oldModifierClasses","oldModifierClass","index","indexOf","splice","modifierClass","blockName","classNames","push","constructor","concat","join","mixin","created","namespacedBlock","args","bem"],"mappings":"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"}